# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=release
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),release)
  ocgcore_config = release
  lua_config = release
  sqlite3_config = release

else ifeq ($(config),release32)
  ocgcore_config = release32
  lua_config = release32
  sqlite3_config = release32

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := ocgcore lua sqlite3

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

ocgcore: lua
ifneq (,$(ocgcore_config))
	@echo "==== Building ocgcore ($(ocgcore_config)) ===="
	@${MAKE} --no-print-directory -C . -f ocgcore.make config=$(ocgcore_config)
endif

lua:
ifneq (,$(lua_config))
	@echo "==== Building lua ($(lua_config)) ===="
	@${MAKE} --no-print-directory -C . -f lua.make config=$(lua_config)
endif

sqlite3:
ifneq (,$(sqlite3_config))
	@echo "==== Building sqlite3 ($(sqlite3_config)) ===="
	@${MAKE} --no-print-directory -C . -f sqlite3.make config=$(sqlite3_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f ocgcore.make clean
	@${MAKE} --no-print-directory -C . -f lua.make clean
	@${MAKE} --no-print-directory -C . -f sqlite3.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  release"
	@echo "  release32"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   ocgcore"
	@echo "   lua"
	@echo "   sqlite3"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"